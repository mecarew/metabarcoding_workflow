---
title: "Cross-check of MC excel checks with reproducible Appendix 2 code"
format: html
editor: source
editor_options: 
  chunk_output_type: console
---

CHRIS: This code (below) uses my 'checked' sheets produced by using R (for compiling the bold v5 search data) and Excel for the manual follow up. Data was flagged where either the  bold v5 produced a match that was different to the current max_p_identity (changing whether a species identification was made i.e., => or <= 97 or was improved in bold v5) and/or the name current species name and bold name did not match. This process also pick error by me, those in the vsearch database and new squence data providing new species identifications.
MEL: I have adapted your code for checking against the final tfill table.  Note this doesn't check non-aqu/non-terrestrial records

```{r}
tfill_ck <- read.csv("~/uomShare/wergStaff/MelCarew/git-data/metabarcoding_workflow/asv_library/arc_tfill_checked_all.csv")
maxp_ck <- read.csv("~/uomShare/wergStaff/MelCarew/git-data/metabarcoding_workflow/asv_library/arc_maxp_checked_all.csv")
mw46unmat_ck <- read.csv("~/uomShare/wergStaff/MelCarew/git-data/Spring_2018_DNA_metabarcoding_data/synonym_updates/MW46_metabar_unmatched_checked_all.csv")
arc_unmat_ck  <- read.csv("~/uomShare/wergStaff/MelCarew/git-data/metabarcoding_workflow/asv_library/arc_unmatched_checked.csv")

all_MC_checks <- rbind(tfill_ck, maxp_ck, mw46unmat_ck, arc_unmat_ck) 
# Remove duplicates and unnecessary fields
all_MC_checks <- unique(all_MC_checks[c("asv_code","checked_species_name", "bold_match","bold_bin_uri","action","comments")])
dups <- all_MC_checks[duplicated(all_MC_checks$asv_code) | duplicated(all_MC_checks$asv_code, fromLast = TRUE),]  
#  174 duplicated asv_codes with different actions/comments: get rid of some as follows
# Need to work around this somehow....for now just delete all duplicates (at the risk of losing some important actions/comments)
# important actions seem to come second, so
all_MC_checks <- all_MC_checks[!duplicated(all_MC_checks$asv_code, fromLast = TRUE),]

tfill <- readxl::read_excel("~/git/metabarcoding_workflow/data/asv_library_corrected.xlsx", sheet = 1)
tfill_spp_bins <- readxl::read_excel("~/git/metabarcoding_workflow/data/asv_library_corrected.xlsx", sheet = 2)
# tfill records without a BOLD match
asv_no_bold <- tfill$asv_code[!tfill$asv_code %in% unique(tfill_spp_bins$asv_code)]  #3267 asv_codes
# 301 Species names given to records in the old tables (tfille, mw46) that are now given NA for species
no_bold_species_old <- unique(tfill$species_old[tfill$asv_code %in% asv_no_bold & !grepl("Unident", tfill$species_old)]) #CHRIS: I might be misunderstanding what you are trying to do here, but I would rather not use 'Unident' in the species column if we aren't confident of a species it should be left blank. #Please don't worry about this - this is using the OLD species names to search
# 3267 records not in bold - MEL - note this is more than last run of this script.
no_bold_species_old_records <- tfill[tfill$asv_code %in% asv_no_bold,]
# CHRIS: I have searched these records against sequences in my private library using Geneious (as this is the only way to check them outside of vsearch). You will find the results here /Volumes/2200-werg/wergStaff/MelCarew/git-data/metabarcoding_workflow/asv_library/Geneious_search\ -\ not_bold\ -\ Private\ DNA\ barcode\ database\ Oct\ 23\ Megablast.csv Geneious_search - not_bold - Private DNA barcode database Oct 23 Megablast.csv). Main point 1771 sequences have >97 matches in tbe private library. I would keep these match over what bold says. The remaining sequences I have tried to against GenBank but I can't seem to download the results.
### MEL: So can you please flag the records to keep

# Records checked by Mel that do not have a >97% match with BOLD (and have been given different names by MC and CW)
check_no_bold <- all_MC_checks[all_MC_checks$asv_code %in% asv_no_bold,]
check_no_bold$species <- tfill$species[match(check_no_bold$asv_code, tfill$asv_code)]
check_no_bold[is.na(check_no_bold)] <- ""  # for easier matching
check_no_bold <- check_no_bold[check_no_bold$species != check_no_bold$checked_species_name,] # 751 records
check_no_bold <- dplyr::mutate(check_no_bold, 
                               max_sim_bold = tfill$max_sim_bold[match(check_no_bold$asv_code, tfill$asv_code)],
                               .after = bold_match)

# Identify the check_no_bold records that share a name with records that actually have a >97% bold match
tfill_bold <-tfill[tfill$asv_code %in% unique(tfill_spp_bins$asv_code),]  #17,048
check_no_bold_spp_in_bold <- check_no_bold[check_no_bold$species %in% unique(tfill_bold$species),]  #9 (just those for which I haven't yet made max_p_identity 92, pending answer to question below - species names will disappear - with appropriate population of other taxon fields -if I do so) CHRIS: The max-p-identities should be lower as these species did not match on any database, so the soecies names need to disappear.

# Flag (with 1) check_no_bold records that have a <97% match with bold
check_no_bold$lt97_bold_match <- 0
check_no_bold$lt97_bold_match[check_no_bold$asv_code %in% unique(bold_results$asv_code)] <- 1
check_no_bold$bold_match <- as.numeric(check_no_bold$bold_match)
### MEL, inspecting check_no_bold... 
View(check_no_bold)  # and then sort by bold_match descending
### I have several thoughts. Please respond to each below: 
###  1. I see checked_species_name is either blank or a genus/family/phylum name if bold_match is low.
###     Am I right in thinking that such records should just be removed from the library and let vsearch take care of identifying these? CHRIS:Yes. For the most part these records will return the correct search result with vsearch. The only time they won't is if there is an error in the vsearch library. However, I think most of these have been fixed using bold V5.
###     If I am not right, please explain your rationale for keeping them. CHRIS: I am overriding VSEARCH here as these records are mistakes in the reference library (which I really need to update)
#CHRIS: please change all records in 'check_no_bold' to my suggested updated names except for Certopogonidae sp.MC-2 as these are wrong in the vsearch library.
###  2. I haven't yet adjusted the max_p_identity for records that you have manually set to <94, CHRIS: Can I suggest we search these record using the 'genus and species search' this will provide matched to 90 CHRIS: that sounds reasonable please do this.
###     pending confirmation that you really want to include such records in the library. If I do so, the species names currently there will 
###     disappear (and only family value will be retained) CHRIS: that's fine as we override VSEARCH errors
###  3. I haven't yet kept names from your private library (or GenBank). I propose that we assemble a small table of these records as a source CHRIS: That's fine. eventually these will end up on bold and the list can be updated when this happens. 
###     file for the script, but I wanted to check some details with you first. 
###     a) Did you really check the identity of every sequence? (e.g. all 30 asv_codes called "Apsectrotanypus sp. MC-4"). If not, shouldn't your 
###     private library (and the asv_library) only include those your have checked and let your notebook 6 process decide which sequences are adequately similar
###     to be given the same name? CHRIS: to make this codeable I have provided search results from Geneious. I can do the same for GenBank. However, with the except of Contacyphon lindensis in the 'check_no_bold' vsearch should return the correct assigments
###     b) related to this, some records have checked_species_name of records marked as private library, 
###       but are not commented as being in the private library (e.g
check_no_bold[check_no_bold$checked_species_name == "Pontogeneiidae sp. B-AGK4900",]
###       Should these records be in either the asv or private library, as I asked in a)
###     c) Can you provide a source/justification for each id (how was the ID arrived at?) for inclusion in the private library table?
###     d) 5 of your private library names have B- names, where they don't match BOLD >97%. CHRIS: I am hoping the Geneious output will help  you here
unique(check_no_bold$checked_species_name[grepl("B-", check_no_bold$checked_species_name) & grepl("private",check_no_bold$comments)])
###        Even though most of these have similarity to the given bin_uri close to 97%, I don't think 
###        this is a good idea, as when you submit them to BOLD they will be given new bin_uris, and the bins  
###        you have matched them to, may or may not overlap.  I think you should re-name them MC-something. CHRIS: I understand what your saying. These species fit into grey area. I am being conservative here and lumping them because to me there is not a clear split when additonal sequences which are not on bold are considered
###  4. I started flagging with species_name_shared_with_records_that_DO_match_BOLD = 1, are a particular problem
###     But these have now all gone away with your last BOLD rechecks, which is pleasing
x <- check_no_bold[check_no_bold$species_name_shared_with_records_that_DO_match_BOLD == 1 & check_no_bold$checked_species_name != "",]
nrow(x)
###   3. If you sort by bold_match descending, you'll see the first 12 records have bold_match > max_sim_bold. I have assumed 
###      checekd_species_name is wrong for these and have removed the species name (retaining the correct higher taxon names) # CHRIS: That is correct. I should have left the checked species name blank

# Records not checked by Mel that do not have a match with BOLD
no_check_no_bold <- tfill[tfill$asv_code %in% asv_no_bold & !tfill$asv_code %in% all_MC_checks$asv_code,]  #11
no_check_no_bold_spp_in_bold <- no_check_no_bold[no_check_no_bold$species %in% unique(tfill_bold$species),]  #1
unique(no_check_no_bold_spp_in_bold$species)  #1 species
# Flag (with 1) no_bold species names that are shared with records that DO have a BOLD match.
no_check_no_bold$species_name_shared_with_records_that_DO_match_BOLD  <- 0
no_check_no_bold$species_name_shared_with_records_that_DO_match_BOLD[no_check_no_bold$asv_code %in% no_check_no_bold_spp_in_bold$asv_code]  <- 1
no_check_no_bold
###  MEL: just 11 records that you haven't checked and do not have a bold match >97.  Are you happy with these 11? 
###       The last one is suss, given there are records in tfill that have been given this species name and do have matches to BOLD
# CHIRS: Sciomyzidae sp. MC-2 is from my private library (so vsearch is correct in this assignment). The remainder look like boarderline differences where  vsearch puts them just over 97
# MEL: Yes, but what about the last one??  I think this is highly suss.

check_with_bold <- all_MC_checks[!all_MC_checks$asv_code %in% asv_no_bold,]
# Exclude non_aqu/non_macros not checked by CW
check_with_bold <- check_with_bold[check_with_bold$asv_code %in% tfill$asv_code,]
check_with_bold$species <- tfill$species[match(check_with_bold$asv_code, tfill$asv_code)]
check_with_bold[is.na(check_with_bold)] <- ""  # for easier matching
check_with_bold <- dplyr::mutate(check_with_bold, 
                               max_sim_bold = tfill$max_sim_bold[match(check_with_bold$asv_code, tfill$asv_code)],
                               max_p_identity = tfill$max_p_identity[match(check_with_bold$asv_code, tfill$asv_code)],
                               .after = bold_match)  #16,117

# First check that update_matches have been applied correctly
check_with_bold_to_update_match <- check_with_bold[grep("update match", check_with_bold$action),] #294
sum(check_with_bold_to_update_match$max_sim_bold != check_with_bold_to_update_match$max_p_identity)  # 17 out of 294 - not bad!
check_with_bold_to_update_match[check_with_bold_to_update_match$max_sim_bold != check_with_bold_to_update_match$max_p_identity,]
# These are cases where max_p_identity > max_sim_bold and both > 97, which I think means vsearch similarity shouldn't change. Correct? CHRIS: Yes. A species is a species if it is over 97
# If so, I think this looks good!

# Check for disagreements between checked_species_name and the name determined by the Appendix 2 script (species)
check_with_bold <- check_with_bold[check_with_bold$species != check_with_bold$checked_species_name,]
# 3248 records where checked_species name doesn't match species,
x <- unique(check_with_bold[c("checked_species_name","species")])
nrow(x) # reduces to 121 name disagreements

# Let's break this up and reduce the list iteratively: please identify any names you think the script has got wrong at each step

# Groups MEL has lumped that the script identified as distinct
x1 <- x[duplicated(x$checked_species_name) | duplicated(x$checked_species_name, fromLast = TRUE),]
x1[order(x1$checked_species_name),]

# Groups that the script lumped and MEL had as separate
x2 <- x[duplicated(x$species) | duplicated(x$species, fromLast = TRUE),]
x2[order(x2$species),]
#(I'm moderately confident that the scrip has these two sets of disagreements right)

# Remove these to get
x <- x[!x$species %in% unique(c(x2$species, x1$species)),]
nrow(x) # reduced to 90

# We would expect that there will be disagreement in B- names (the script always chooses the first bin alphabetically and adds the name group)
x3 <- x[grepl("B-", x$species) & grepl("group", x$species) & grepl("B-", x$checked_species_name),]
x3

# Remove these to get
x <- x[!x$species %in% x3$species,]
nrow(x) # reduced to 30

# Now check if any of the remaining 87 disagreements are a result of Mel's "update species name" not being made
mel_changes <- unique(check_with_bold$checked_species_name[grep("species name",check_with_bold$action)])
x4 <- x[x$checked_species_name %in% mel_changes,]
x4 # MEL please check these. Some of them are as simple as searching for the bin_uri in Appendix_2_clean_cw.qmd and answering my question about assigning a name to that bin_uri (and if you think I have made the wrong decision, changing the explanatory comment, and changing the name in the script to the correct one.).(Or you may have already corrected these as you stepped through the script). Some are a little more difficult to get your head around: e.g. Cricotopus sp. B-ACQ6787, which your comment says is not Cricotopus parbicinctus, has been called Cricotopus parbicinctus because ACQ6787 overlaps with ACG9186 and ACV9554, which are that species. CHRIS: If you say it overlaps, then it overlaps so change it. Most other discreparies are groupings. I trust your analysis here, over my looking on bold. The only one we should change to my id is Scirtidae sp. B-AGK3234/ Pseudomicrocara anthophilia it should be change to Anthocara anthophilia (as per a correction on GenBank that is yet to picked up by bold)
# Remove these to get 
x <- x[!x$species %in% x4$species,]
nrow(x) # reduced to 15, A relatively modest number for you to consider. If any are just a matter of correcting the name associated with a bin_uri, please just add lines to the bold_name_corrections object at L972 in Appendix_2_clean_cw.qmd (checking that the bin_uri isn't already in the list)
# CHRIS: All good except Contacyphon sp. B-AGN0208 should be updated to Nothocyphon serratipenis (Genbank name update), for Mirawara sp. AV1 I think we should use the bin name Mirawara sp. B-AAV0800,  sp. B-AFU5450 should be Caloca sp. B-AFU5450, Micronecta sp. B-SPAA886-23 looks alot like Proteobacteria.
x

```
